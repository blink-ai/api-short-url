openapi: 3.0.0
info:
  version: '1.0.0'
  title: Blinkai API - Short URLs
  description: |-
    This is a documentation for Short URL API based on the OpenAPI 3.0 specification. We have several APIs in mind and will be added very soon to this document. 
    The API revolves around Short URL creation, and retrieval process. We will be adding more payload and more APIs to make it easy to create/edit/retrieve, and get analytical data for them as well
    
    ## Authentication
    We use a standard `Authorization` header to validate your call. The token will be in below format:
    
    ```
      Authorization: Bearer <Token provided to you>
    ```
    This will be provisioned to you specifically. **PLEASE DO NOT SHARE THIS WITH ANYONE**. Please reach out to us if you think this value has been exposed, and we can rotate the token for you.
    
    
    ## Blink AI Identifiers
    For each store, you will be given few identifiers that will be used to pass to create a short URL.
    - Store Id - Used to identify the store
    - Service Type - Used to identify what service is the customer here for. Each store decides their name, and can be different per store
    - Transportation Type - Same as service type. Configured by individual store.
    
    ## Tracking
     We will be able to track each short URLs in two ways:
     
     1. **Individual Tracking**: This will help you identify if the customer has booked an appointment or not. This will be added in very near future.
     2. **Campaign Tracking**: This can be used to identify how each campaign is doing overall. This can be used for experimental analysis. We are working on best ways to provide you this information. Either via API, or via a UI that you will have access to.
     
    ## Upcoming Features:
    - We are working on update, and get All APIs for you to make changes to existing Short URL.
    - Tracking. We will be working on providing you with all possible options on how to track each url's progress, and conversion metrics
servers:
  - url: https://api.blinkai.com/api
paths:
  /short_urls:
    post:
      tags:
        - Short URLs
      description: Create a new short URL. The only real information that is required is storeId. All other fields are optional. All the fields under values are used to personalize the experience for the customer.
      operationId: createShortUrl
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShortUrl'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShortUrlResponse'
  /short_urls/{id}:
    get:
      tags:
        - Short URLs
      description: Get a short URL by ID
      operationId: getShortUrlById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShortUrlResponse'
components:
  schemas:
    Values:
      type: object
      properties:
        firstName:
          type: string
          description: First Name
          example: Jay
        lastName:
          type: string
          description: Last Name
          example: Patel
        phone:
          type: string
          pattern: "^1[0-9]{10}$"
          description: Phone number in alphanumeric format with leading 1
          example: 15128066149
        campaignId:
          type: string
          description: This will be used to track at a group level. E.g. "Declined Services", "Oil Change", etc.
          example: "Oil Change"
        email:
          type: string
          format: email
          example: "test@blinkai.com"
        vehicleVIN:
          type: string
          example: 4T1BF1FK4CU609641
        vehicleMake:
          type: string
          example: "Toyota"
        vehicleModel:
          type: string
          example: "Camry"
        vehicleYear:
          type: string
          example: 2012
        serviceType:
          type: string
          example: OIL_CHANGE
          description: Service Type value provided by BlinkAI. Please note that this must match one of the added values in Store configuration
        transportationType:
          type: string
          example: WAITER
          description: Transportation Type value provided by BlinkAI. Please note that this must match one of the added values in Store configuration
    ShortUrl:
      type: object
      required:
        - storeId
      properties:
        storeId:
          type: string
          description: Blink Identifier for given store. This will be shared with you when you onboard a new store to our integration 
          example: 64cc663b9c61721f0e1d4f82
        values:
          $ref: '#/components/schemas/Values'
    ShortUrlResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique Id for the short URL Generated.
          example: 1VG22KQ
          readOnly: true
        status:
          type: string
          description: Identifies the current state of the Short URL
          enum: [CREATED, VISITED, BOOKED]
          example: CREATED
          readOnly: true
        url:
          type: string
          description: URL that can be used to share to the customer. This URL will trigger the experience
          readOnly: true
          example: https://book.blinkai.com/a/1VG22KQ
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        storeId:
          type: string
          description: Blink Identifier for given store. This will be shared with you when you onboard a new store to our integration 
          example: 64cc663b9c61721f0e1d4f82
        values:
          $ref: '#/components/schemas/Values'
        email_blob_html:
          type: string
          description: Alpha Release. Coming soon. This will contain an embeddable HTML code that can be attached to the email to allow for a very interactive UI experience directly on the email.
          readOnly: true
          example: <button>Coming Soon</button>
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
security:
  - BearerAuth: []
  
